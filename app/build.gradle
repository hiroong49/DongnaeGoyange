plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def accessKey = properties.getProperty('access.key')
def secretAccessKey = properties.getProperty('secret.access.key')

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.dongnaegoyang"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        resValue "string", "access_key", accessKey
        resValue "string", "secret_access_key", secretAccessKey
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures { // 뷰바인딩 (안드로이드 4.0이상부터 이걸로 변경)
        viewBinding true
    }
    dataBinding {
        enabled = true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation("androidx.collection:collection-ktx:1.2.0") // by viewModels()

    implementation "androidx.fragment:fragment-ktx:1.4.1"   // fragment간 data 전달
    implementation "androidx.viewpager2:viewpager2:1.0.0"   // viewpager2
    implementation 'com.github.bumptech.glide:glide:4.12.0' // glide
    implementation 'androidx.cardview:cardview:1.0.0'       // cardview
    implementation 'io.github.sangcomz:fishbun:1.0.0-beta01'   // limit photo count
    implementation 'com.romandanylyk:pageindicatorview:1.0.3'   // pageindicatorview

    implementation "com.kakao.sdk:v2-user:2.11.0" // 카카오 로그인

    implementation 'com.squareup.retrofit2:retrofit:2.9.0' // 주소 검색을 위한 retrofit
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    // Hilt
    implementation "com.google.dagger:hilt-android:2.42"
    kapt "com.google.dagger:hilt-android-compiler:2.42"

    // Network
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation platform("com.squareup.okhttp3:okhttp-bom:4.9.0")
    implementation "com.squareup.okhttp3:okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor"

    // S3
    implementation 'com.amazonaws:aws-android-sdk-mobile-client:2.13.5'
    implementation 'com.amazonaws:aws-android-sdk-cognito:2.13.5'
    implementation 'com.amazonaws:aws-android-sdk-s3:2.13.5'

    //RxAndroid, RxJava, RxKotlin
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.17'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.4.0'
    implementation 'com.jakewharton.rxbinding3:rxbinding:3.1.0'
    implementation 'com.uniquext.android:rxlifecycle:2.0.0'


}